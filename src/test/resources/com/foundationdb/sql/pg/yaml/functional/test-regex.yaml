---
- Statement: SELECT REGEX('1abc2', '[a-z]+')
- output: [[true]]
---
- Statement: SELECT REGEX('1abc2', '^[a-z]+$')
- output: [[false]]
---
- Statement: SELECT REGEX('1abc2', '[A-Z]')
- output: [[false]]
---
- Statement: SELECT IREGEX('1abc2', '[A-Z]+')
- output: [[true]]

---
- Statement: SELECT REGEX('1abc2', '[A-Z]', 'i')
- output: [[true]]
---
- Statement: SELECT REGEX(E'a\nb', '^.*$', '')
- output: [[false]]
---
- Statement: SELECT REGEX(E'a\nb', '^.*$', 's')
- output: [[true]]

---
- CreateTable: str(id INT NOT NULL PRIMARY KEY, s varchar(32))
---
- Statement: INSERT INTO str VALUES (1, 'foo'), (2, 'Foo'), (3, 'bar'), (4, 'Bar')
---
- Statement: SELECT id,REGEX(s, s) FROM str ORDER BY id
- output: [ [1, true], [2, true], [3, true], [4, true] ]
---
- Statement: SELECT id FROM str WHERE REGEX(s, '[f]') ORDER BY id
- output: [ [1] ]
---
- Statement: SELECT id FROM str WHERE IREGEX(s, '[f]') ORDER BY id
- output: [ [1], [2] ]

---
- CreateTable: pat(id INT NOT NULL PRIMARY KEY, p varchar(32))
---
- Statement: INSERT INTO pat VALUES (1, 'foo|bar'), (2, 'F|B')
---
- Statement: SELECT str.id,pat.id FROM str,pat WHERE REGEX(s, p) ORDER BY str.id,pat.id
- output: [ [1, 1], [2, 2], [3, 1], [4, 2] ]
---
- Statement: explain verbose  select regex('abc123', cast(? as char(4)))
- output: [['Project_Default(REGEX(''abc123'', CAST($1 AS VARCHAR(4))))'],
          ['  ValuesScan_Default([])']]
---
- Statement: explain verbose select regex (cast(? as char(14)), '.*')
- output: [['Project_Default(REGEX(CAST($1 AS VARCHAR(14)), ''.*''))'],
          ['  ValuesScan_Default([])']]
          
---
- Statement: explain verbose select regex('abcd1234', cast(? as CHAR(2)), cast(? as CHAR(5)))
- output: [['Project_Default(REGEX(''abcd1234'', CAST($1 AS VARCHAR(2)), CAST($2 AS VARCHAR(5))))'],
            ['  ValuesScan_Default([])']]
        
...