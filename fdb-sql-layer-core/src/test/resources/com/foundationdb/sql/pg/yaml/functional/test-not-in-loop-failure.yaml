---
- CreateTable: artists (id serial PRIMARY KEY, name varchar(255));
---
- CreateTable: albums (id serial PRIMARY KEY, name varchar(255));
---
- CreateTable: albums_artists (album_id integer REFERENCES albums, artist_id integer REFERENCES artists);
---
- Statement: INSERT INTO albums (name) VALUES ('A'), ('B'), ('C'), ('D');
---
- Statement: INSERT INTO artists (name) VALUES ('1'), ('2'), ('3'), ('4');
---
- Statement: INSERT INTO albums_artists (album_id, artist_id)
                VALUES (1, 1), (1, 2), (2, 3), (2, 4), (3, 2), (3, 3), (4, 1), (4, 4);
---
- Statement: INSERT INTO albums_artists (album_id, artist_id) VALUES (1,null);
---
- Statement: SELECT albums_artists.artist_id
         FROM albums_artists
         INNER JOIN albums ON (albums.id = albums_artists.album_id)
         INNER JOIN albums_artists AS albums_artists_0 ON (albums_artists_0.album_id = albums.id)
         WHERE
            (albums_artists_0.artist_id = 1)
            AND (albums_artists.artist_id IS NULL);
- row_count: 1
---

# inner select just returns null (see second WHERE clause)
- Statement: SELECT * FROM artists WHERE (
             (artists.id NOT IN
                (SELECT albums_artists.artist_id FROM albums_artists
                    INNER JOIN albums ON (albums.id = albums_artists.album_id)
                    INNER JOIN albums_artists AS albums_artists_0 ON (albums_artists_0.album_id = albums.id)
                    WHERE ((albums_artists_0.artist_id = 1) AND (albums_artists.artist_id IS NULL))))
             OR (artists.id IS NULL))
- row_count: 0
...
