---  # based on files in server /src/test/resources/com/foundationdb/sql/pg/select
- Include: all-schema.yaml
#--- bug 915379
#- Statement: EXPLAIN SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid AND items.sku < '8888' 
#- output: [['Project_Default([Field(1), Field(4), Field(7), Field(8)])'],['  Flatten_HKeyOrdered(flatten(test.customers, test.orders) INNER test.items)'],['    Flatten_HKeyOrdered(test.customers INNER test.orders)'],['      AncestorLookup_Default(Index(test.items.sku[IndexColumn(sku)]) -> [test.customers, test.orders, test.items])'],['        IndexScan_Default(Index(test.items.sku[IndexColumn(sku)]) (>UnboundExpressions[Literal(NULL)],<UnboundExpressions[Literal(8888)]))']]
#- comment: ['explain-2: explain group joins']
---
- Statement: SELECT name FROM customers WHERE cid = 1 
- output: [['Smith']]
#- comment: ['select-0: single column of primary key match']
---
- Statement: SELECT * FROM customers 
- output: [['1','Smith'],['2','Jones']]
#- comment: ['select-1: all fields of single table']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid AND items.sku = '1234' ORDER BY order_date 
- output_already_ordered: [['Jones','2011-02-28','1234','99'],['Smith','2011-03-01','1234','100']]
#- comment: ['select-10: group index for condition and ordering']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid AND items.sku = '1234' ORDER BY order_date DESC 
- output_already_ordered: [['Smith','2011-03-01','1234','100'],['Jones','2011-02-28','1234','99']]
#- comment: ['select-10r: reverse ordering']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid ORDER BY sku, order_date 
- output_already_ordered: [['Jones','2011-02-28','1234','99'],['Smith','2011-03-01','1234','100'],['Smith','2011-03-01','4567','50'],['Jones','2011-03-03','9876','1']]
#- comment: ['select-11: group index ordering only']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid ORDER BY sku DESC, order_date 
- output_already_ordered: [['Jones','2011-03-03','9876','1'],['Smith','2011-03-01','4567','50'],['Jones','2011-02-28','1234','99'],['Smith','2011-03-01','1234','100']]
#- comment: ['select-11m: mixed-mode ordering']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid ORDER BY sku DESC, order_date DESC 
- output_already_ordered: [['Jones','2011-03-03','9876','1'],['Smith','2011-03-01','4567','50'],['Smith','2011-03-01','1234','100'],['Jones','2011-02-28','1234','99']]
#- comment: ['select-11r: reverse ordering']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers INNER JOIN orders ON customers.cid = orders.cid INNER JOIN items ON orders.oid = items.oid ORDER BY order_date DESC, quan DESC LIMIT 100 
- output_already_ordered: [['Jones','2011-03-03','9876','1'],['Smith','2011-03-01','1234','100'],['Smith','2011-03-01','4567','50'],['Jones','2011-02-28','1234','99']]
#- comment: ['select-12: reverse sort multiple fields']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid ORDER BY quan DESC 
- output_already_ordered: [['Smith','2011-03-01','1234','100'],['Jones','2011-02-28','1234','99'],['Smith','2011-03-01','4567','50'],['Jones','2011-03-03','9876','1']]
#- comment: ['select-13: sorting without limit']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid ORDER BY quan DESC LIMIT 2 
- output_already_ordered: [['Smith','2011-03-01','1234','100'],['Jones','2011-02-28','1234','99']]
#- comment: ['select-13l: sorting with limit']
---
- Statement: SELECT order_date, sku, quan FROM customers INNER JOIN orders ON customers.cid = orders.cid INNER JOIN items ON orders.oid = items.oid WHERE name = 'Smith' AND sku IN ('1234', '9876') 
- output: [['2011-03-01','1234','100']]
#- comment: ['select-14: IN using index']
---
- Statement: SELECT order_date, sku, quan FROM customers INNER JOIN orders ON customers.cid = orders.cid INNER JOIN items ON orders.oid = items.oid WHERE name = 'Smith' AND quan IN (99, 100, 101) 
- output: [['2011-03-01','1234','100']]
#- comment: ['select-14n: IN not using index']
---
- Statement: SELECT name, MIN(order_date), MAX(order_date), COUNT(*) FROM customers INNER JOIN orders ON customers.cid = orders.cid GROUP BY name ORDER BY name 
- output_already_ordered: [['Jones','2011-02-28','2011-03-03','2'],['Smith','2011-03-01','2011-03-02','2']]
#- comment: ['select-15: aggregation with GROUP BY']
---
- Statement: SELECT MIN(order_date), MAX(order_date), COUNT(*) FROM orders WHERE oid=999 GROUP BY cid 
- row_count: 0
#- comment: ['select-16: aggregation matching no rows, with GROUP BY']
---
- Statement: SELECT MIN(order_date), MAX(order_date), COUNT(*) FROM orders WHERE oid=999 
- output: [[null,null,'0']]
#- comment: ['select-17: aggregation matching no rows, no GROUP BY']
---
- Statement: SELECT MIN(order_date), MAX(order_date), COUNT(*) FROM orders WHERE oid=999 GROUP BY ROLLUP(cid)
- error: ['0A50C'] # GROUP BY ROLLUP is temporarily not supported
---
- Statement: select name from customers WHERE 1 ORDER BY name 
- output_already_ordered: [['Jones'],['Smith']]
#- comment: ['select-18a: int (1) as boolean in WHERE']
---
- Statement: select name from customers WHERE 0 ORDER BY name 
- row_count: 0
#- comment: ['select-18n: int (0) as boolean in WHERE']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid AND customers.name = 'Jones' AND items.sku > '5000' 
- output: [['Jones','2011-03-03','9876','1']]
#- comment: ['select-19: group index with one inequality']
---
- Statement: SELECT name FROM customers ORDER BY name 
- output_already_ordered: [['Jones'],['Smith']]
#- comment: ['select-1c: sorted covering index']
--- 
- Statement: SELECT cid AS id, name as "Customer Name" FROM customers 
- output: [['1','Smith'],['2','Jones']]
#- comment: ['select-1n: name column']
--- 
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid AND items.sku < '8888' 
- output: [['Smith','2011-03-01','1234','100'],['Jones','2011-02-28','1234','99'],['Smith','2011-03-01','4567','50']]
#- comment: ['select-2: index on grandchild table']
---
- Statement: SELECT name FROM customers WHERE cid IN (1000, 999, ?) 
- params: [[1]]
- output: [['Smith']]
#- comment: ['select-20: IN with parameter']
#--- ## BUG 915369
#- Statement: SELECT customers.name, (SELECT MAX(order_date) FROM orders WHERE customers.cid = orders.cid) AS max_date FROM customers 
#- output: [['Smith','2011-03-02'],['Jones','2011-03-03']]
#- comment: ['select-21: subquery for value']
---
- Statement: SELECT iid, sku, quan FROM items WHERE EXISTS (SELECT * FROM items i2 WHERE items.sku = i2.sku AND items.iid <> i2.iid) OR iid < 0 
- output: [['1011','1234','100'],['2021','1234','99']]
#- comment: ['select-22: EXISTS as expression (extra OR prevents unnesting)']
---
- Statement: SELECT * FROM customers WHERE name IN (SELECT c2.name FROM customers c2, orders WHERE c2.cid = orders.cid AND order_date > '2011-01-01') 
- output: [['1','Smith'],['2','Jones']]
#- comment: ['select-23: IN / ANY as expression ']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM items INNER JOIN orders ON orders.oid = items.oid LEFT OUTER JOIN customers ON customers.cid = orders.cid WHERE order_date < '2011-03-01' 
- output: [[null,'2010-01-01','9999','888'],['Jones','2011-02-28','1234','99']]
#- comment: ['select-24: RIGHT join']
--- 
- Statement: SELECT customers.name,order_date,sku,quan FROM items INNER JOIN orders ON orders.oid = items.oid LEFT OUTER JOIN customers ON customers.cid = orders.cid WHERE order_date < '2011-03-01' ORDER BY order_date, name 
- output_already_ordered: [[null,'2010-01-01','9999','888'],['Jones','2011-02-28','1234','99']]
#- comment: [''select-24g: RIGHT join group index]
#--- bug #914780
#- Statement: SELECT CURRENT_USER AS "schema", SESSION_USER AS "user" FROM items WHERE iid = ? 
#- params: [[2011]]
#- output: [['user','auser']]
#- comment: ['select-25u: USER environment functions']
---
- Statement: SELECT name, order_date FROM customers RIGHT JOIN orders USING (cid) WHERE (order_date != '2011-03-02' AND order_date != '2011-02-28') 
- output: [[null,'2010-01-01'],['Smith','2011-03-01'],['Jones','2011-03-03']]
#- comment: ['select-26']
---
- Statement: SELECT name, order_date FROM customers RIGHT JOIN orders USING (cid) WHERE (order_date != '2011-03-02' AND order_date != '2011-02-28') OR order_date IS NULL 
- output: [[null,'2010-01-01'],['Smith','2011-03-01'],['Jones','2011-03-03']]
#- comment: ['select-26n']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid AND items.sku = '1234' 
- output: [['Smith','2011-03-01','1234','100'],['Jones','2011-02-28','1234','99']]
#- comment: ['select-2a: index equality condition on grandchild table']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid AND items.sku >= '0' AND items.sku < '8888' 
- output: [['Smith','2011-03-01','1234','100'],['Jones','2011-02-28','1234','99'],['Smith','2011-03-01','4567','50']]
#- comment: ['select-2b: index range inequalities on grandchild']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid AND items.sku < ? 
- params: [['8888']]
- output: [['Smith','2011-03-01','1234','100'],['Smith','2011-03-01','4567','50'],['Jones','2011-02-28','1234','99']]
#- comment: ['select-2p: index with parameter']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid AND items.sku < '8888' AND items.quan = 100 
- output: [['Smith','2011-03-01','1234','100']]
#- comment: ['select-3: index and select condition on leaf table']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers,orders,items WHERE customers.cid = orders.cid AND orders.oid = items.oid AND items.sku < ? AND items.quan = ? 
- params: [['8888','100']]
- output: [['Smith','2011-03-01','1234','100']]
#- comment: ['select-3p: two index parameters']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers INNER JOIN orders ON customers.cid = orders.cid INNER JOIN items ON orders.oid = items.oid WHERE items.sku < '8888' 
- output: [['Smith','2011-03-01','1234','100'],['Jones','2011-02-28','1234','99'],['Smith','2011-03-01','4567','50']]
#- comment: ['select-4: inequality on leaf']
---
- Statement: SELECT order_date,sku FROM orders INNER JOIN items ON orders.oid = items.oid WHERE sku < '8888' ORDER BY sku,order_date 
- output_already_ordered: [['2011-02-28','1234'],['2011-03-01','1234'],['2011-03-01','4567']]
#- comment: ['select-4c: covering group index']
---
- Statement: SELECT customers.name,order_date FROM customers,orders WHERE customers.cid = orders.cid ORDER BY order_date 
- output_already_ordered: [['Jones','2011-02-28'],['Smith','2011-03-01'],['Smith','2011-03-02'],['Jones','2011-03-03']]
#- comment: ['select-5: ordering with join']
---
- Statement: SELECT customers.name,order_date FROM customers,orders WHERE customers.cid = orders.cid ORDER BY order_date DESC LIMIT 2 
- output_already_ordered: [['Jones','2011-03-03'],['Smith','2011-03-02']]
#- comment: ['select-5l: ordering with limit']
---
- Statement: SELECT customers.name,order_date FROM customers,orders,addresses WHERE customers.cid = orders.cid AND customers.cid = addresses.cid AND addresses.state = 'MA' 
- output: [['Smith','2011-03-01'],['Smith','2011-03-02']]
#- comment: ['select-6: index one branch, flatten another']
---
- Statement: SELECT customers.name,order_date,city FROM customers,orders,addresses WHERE customers.cid = orders.cid AND customers.cid = addresses.cid AND addresses.state = 'MA' 
- output: [['Smith','2011-03-01','Boston'],['Smith','2011-03-02','Boston']]
#- comment: ['select-7: index one branch, product both']
---
- Statement: SELECT customers.name, 1 AS num, 'foo' AS str FROM customers 
- output: [['Jones','1','foo'],['Smith','1','foo']]
#- comment: ['select-8: constant in select list']
---
- Statement: SELECT customers.name,order_date,sku,quan FROM customers INNER JOIN orders ON customers.cid = orders.cid LEFT OUTER JOIN items ON orders.oid = items.oid WHERE order_date > '2011-01-01'  
- output: [['Jones','2011-02-28','1234','99'],['Smith','2011-03-01','1234','100'],['Smith','2011-03-01','4567','50'],['Smith','2011-03-02',null,null],['Jones','2011-03-03','9876','1']]
#- comment: ['select-9: LEFT join from table index']
---
- Statement: SELECT customers.name,sku FROM customers LEFT JOIN orders ON customers.cid = orders.cid LEFT JOIN items ON orders.oid = items.oid WHERE name > 'M' 
- output: [['Smith',null],['Smith','1234'],['Smith','4567']]
#- comment: ['select-9g: LEFT join covering group index']
---
- Statement: SELECT * FROM types 
- output: [['1','100','-1000000.0','1.23','1000.0','3456.0','3.14','2.72','foo','2011-04-01','13:15:01',!re '2011-01-04 15:59:59(\.0)?',!re '2011-01-04 15:01:02(\.0)?','1969','long text']]
#- comment: ['types: select all typed fields']
---
- Statement: SELECT a_int FROM types WHERE a_date = '2011-04-01' 
- output: [['1']]
#- comment: ['types_a_date: match literal']
---
- Statement: SELECT a_int FROM types WHERE a_date = ? 
- params: [['2011-04-01']]
- output: [['1']]
#- comment: ['types_a_date_p: match parameter']
---
- Statement: SELECT a_int FROM types WHERE a_datetime = '2011-01-04 15:59:59' 
- output: [['1']]
#- comment: ['types_a_datetime: match literal']
---
- Statement: SELECT a_int FROM types WHERE a_datetime = ? 
- params: [['2011-01-04 15:59:59']]
- output: [['1']]
#- comment: ['types_a_datetime_p: ']
---
- Statement: SELECT a_int FROM types WHERE a_decimal = 3.14 
- output: [['1']]
#- comment: ['types_a_decimal: ']
---
- Statement: SELECT a_int FROM types WHERE a_decimal = ? 
- params: [['3.14']]
- output: [['1']]
#- comment: ['types_a_decimal_p:']
---

- Statement: SELECT a_int FROM types WHERE a_double = 1000.0e0 
- output: [['1']]
#- comment: ['types_a_double:']
---

- Statement: SELECT a_int FROM types WHERE a_double = ? 
- params: [['1000.0e0']]
- output: [['1']]
#- comment: ['types_a_double_p:']
---

- Statement: SELECT a_int FROM types WHERE a_float = -1.0e6 
- output: [['1']]
#- comment: ['types_a_float:']
---

- Statement: SELECT a_int FROM types WHERE a_float = ? 
- params: [['-1.0e6']]
- output: [['1']]
#- comment: ['types_a_float_p:']
---

- Statement: SELECT a_int FROM types WHERE a_int = 1 
- output: [['1']]
#- comment: ['types_a_int:']
---

- Statement: SELECT a_int FROM types WHERE a_int = ? 
- params: [['1']]
- output: [['1']]
#- comment: ['types_a_int_p:']
---

- Statement: SELECT a_int FROM types WHERE a_text = 'long text' 
- output: [['1']]
#- comment: ['types_a_text:']
---

- Statement: SELECT a_int FROM types WHERE a_text = ? 
- params: [['long text']]
- output: [['1']]
#- comment: ['types_a_text_p:']
---

- Statement: SELECT a_int FROM types WHERE a_time = '13:15:01' 
- output: [['1']]
#- comment: ['types_a_time:']
---

- Statement: SELECT a_int FROM types WHERE a_time = ? 
- params: [['13:15:01']]
- output: [['1']]
#- comment: ['types_a_time_p:']
---

- Statement: SELECT a_int FROM types WHERE a_timestamp = '2011-01-04 15:01:02' 
- output: [['1']]
#- comment: ['types_a_timestamp:']
---

- Statement: SELECT a_int FROM types WHERE a_timestamp = ? 
- params: [['2011-01-04 15:01:02']]
- output: [['1']]
#- comment: ['types_a_timestamp_p:']
---

- Statement: SELECT a_int FROM types WHERE a_udecimal = 2.72 
- output: [['1']]
#- comment: ['types_a_udecimal:']
---

- Statement: SELECT a_int FROM types WHERE a_udecimal = ? 
- params: [['2.72']]
- output: [['1']]
#- comment: ['types_a_udecimal_p:']
---

- Statement: SELECT a_int FROM types WHERE a_udouble = 3456.0e0 
- output: [['1']]
#- comment: ['types_a_udouble:']
---

- Statement: SELECT a_int FROM types WHERE a_udouble = ? 
- params: [['3456.0e0']]
- output: [['1']]
#- comment: ['types_a_udouble_p:']
---

- Statement: SELECT a_int FROM types WHERE a_ufloat = 1.23e0 
- output: [['1']]
#- comment: ['types_a_ufloat:']
---

- Statement: SELECT a_int FROM types WHERE a_ufloat = ? 
- params: [['1.23e0']]
- output: [['1']]
#- comment: ['types_a_ufloat_p:']
---

- Statement: SELECT a_int FROM types WHERE a_uint = 100 
- output: [['1']]
#- comment: ['types_a_uint:']
---

- Statement: SELECT a_int FROM types WHERE a_uint = ? 
- params: [['100']]
- output: [['1']]
#- comment: ['types_a_uint_p:']
---

- Statement: SELECT a_int FROM types WHERE a_varchar = 'foo' 
- output: [['1']]
#- comment: ['types_a_varchar:']
---

- Statement: SELECT a_int FROM types WHERE a_varchar = ? 
- params: [['foo']]
- output: [['1']]
#- comment: ['types_a_varchar_p:']
---

- Statement: SELECT a_int FROM types WHERE a_year = '1969' 
- output: [['1']]
#- comment: ['types_a_year:']
---

- Statement: SELECT a_int FROM types WHERE a_year = ? 
- params: [['1969']]
- output: [['1']]
#- comment: ['types_a_year_p:']
---

- Statement: SELECT a_int FROM types_i WHERE a_date = '2011-04-01' 
- output: [['1']]
#- comment: ['types_i_date: match indexed with literal']
---

- Statement: SELECT a_int FROM types_i WHERE a_date = ? 
- params: [['2011-04-01']]
- output: [['1']]
#- comment: ['types_i_date_p: match indexed with parameter']
---

- Statement: SELECT a_int FROM types_i WHERE a_datetime = '2011-01-04 15:59:59' 
- output: [['1']]
#- comment: ['types_i_datetime:']
---

- Statement: SELECT a_int FROM types_i WHERE a_datetime = ? 
- params: [['2011-01-04 15:59:59']]
- output: [['1']]
#- comment: ['types_i_datetime_p:']
---

- Statement: SELECT a_int FROM types_i WHERE a_decimal = 3.14 
- output: [['1']]
#- comment: ['types_i_decimal:']
---

- Statement: SELECT a_int FROM types_i WHERE a_decimal = ? 
- params: [['3.14']]
- output: [['1']]
#- comment: ['types_i_decimal_p:']
---

- Statement: SELECT a_int FROM types_i WHERE a_double = 1000.0e0 
- output: [['1']]
#- comment: ['types_i_double:']
---

- Statement: SELECT a_int FROM types_i WHERE a_double = ? 
- params: [['1000.0e0']]
- output: [['1']]
#- comment: ['types_i_double_p:']
---

- Statement: SELECT a_int FROM types_i WHERE a_float = -1.0e6 
- output: [['1']]
#- comment: ['types_i_float:']
---

- Statement: SELECT a_int FROM types_i WHERE a_float = ? 
- params: [['-1.0e6']]
- output: [['1']]
#- comment: ['types_i_float_p:']
---

- Statement: SELECT a_int FROM types_i WHERE a_int = 1 
- output: [['1']]
#- comment: ['types_i_int:']
---

- Statement: SELECT a_int FROM types_i WHERE a_int = ? 
- params: [['1']]
- output: [['1']]
#- comment: ['types_i_int_p:']
---

- Statement: SELECT a_int FROM types_i WHERE a_time = '13:15:01' 
- output: [['1']]
#- comment: ['types_i_time:']
---

- Statement: SELECT a_int FROM types_i WHERE a_time = ? 
- params: [['13:15:01']]
- output: [['1']]
#- comment: ['types_i_time_p:']
---  #precision reduced for timestamp
- Statement: SELECT a_int FROM types_i WHERE a_timestamp = '2011-01-04 15:01:02'
- output: [['1']]
#- comment: ['types_i_timestamp:']
---
- Statement: SELECT a_int FROM types_i WHERE a_timestamp = ?
- params: [['2011-01-04 15:01:02']]
- output: [['1']]
#- comment: ['types_i_timestamp_p:']
---
- Statement: SELECT a_int FROM types_i WHERE a_udecimal = 2.72 
- output: [['1']]
#- comment: ['types_i_udecimal:']
---
- Statement: SELECT a_int FROM types_i WHERE a_udecimal = ? 
- params: [['2.72']]
- output: [['1']]
#- comment: ['types_i_udecimal_p:']
---

- Statement: SELECT a_int FROM types_i WHERE a_udouble = 3456.0e0 
- output: [['1']]
#- comment: ['types_i_udouble:']
---

- Statement: SELECT a_int FROM types_i WHERE a_udouble = ? 
- params: [['3456.0e0']]
- output: [['1']]
#- comment: ['types_i_udouble_p:']
---

- Statement: SELECT a_int FROM types_i WHERE a_ufloat = 1.23e0 
- output: [['1']]
#- comment: ['types_i_ufloat:']
---

- Statement: SELECT a_int FROM types_i WHERE a_ufloat = ? 
- params: [['1.23e0']]
- output: [['1']]
#- comment: ['types_i_ufloat_p:']
---
- Statement: SELECT a_int FROM types_i WHERE a_uint = 100 
- output: [['1']]
#- comment: ['types_i_uint:']
---
- Statement: SELECT a_int FROM types_i WHERE a_uint = ? 
- params: [['100']]
- output: [['1']]
#- comment: ['types_i_uint_p:']
---
- Statement: SELECT a_int FROM types_i WHERE a_varchar = 'foo' 
- output: [['1']]
#- comment: ['types_i_varchar:']
---
- Statement: SELECT a_int FROM types_i WHERE a_varchar = ? 
- params: [['foo']]
- output: [['1']]
#- comment: ['types_i_varchar_p:']
---
- Statement: SELECT a_int FROM types_i WHERE a_year = '1969' 
- output: [['1']]
#- comment: ['types_i_year:']
---
- Statement: SELECT a_int FROM types_i WHERE a_year = ? 
- params: [['1969']]
- output: [['1']]
#- comment: ['types_i_year_p:']
...
