## Tests for LOCATE and POSITION
## Related bug 943475
## Status: fix committed
---
- Include: all-types-schema.yaml
---
- Statement: INSERT INTO all_types (varchar_field, double_field, bigint_field, date_field) 
            VALUES ('foobarbar', 5.5, 1, '2012-01-01'), ('foobar', 2.5, 2, '2012-02-02');

## Test with literals
---
- Statement: SELECT LOCATE ('bar' IN 'foobarbar') from all_types WHERE bigint_field = 1;
- output: [[4]]
---
- Statement: SELECT LOCATE ('xbar', 'foobarbar') from all_types WHERE bigint_field = 1;
- output: [[0]]
---
- Statement: SELECT LOCATE ('bar', 'foobarbar', 5) from all_types WHERE bigint_field = 1;
- output: [[7]]
---
- Statement: SELECT LOCATE (null, 'foobar') from all_types WHERE bigint_field = 1;
- output: [[null]]
---
- Statement: SELECT LOCATE ('foo', 'foobarbar', null) from all_types WHERE bigint_field = 1;
- output: [[null]]
---
- Statement: SELECT LOCATE(null, null) from all_types WHERE bigint_field = 1;
- output: [[null]]
---
- Statement: SELECT bigint_field from all_types WHERE LOCATE('bar', 'foobarbar') = bigint_field * 4;
- output: [[1]]
---
- Statement: SELECT double_field from all_types WHERE LOCATE(null, null, null) IS NULL;
- output: [[5.5], [2.5]]
---
- Statement: SELECT LOCATE ('', 'foo') from all_types;
- output: [[1], [1]]
---
- Statement: SELECT LOCATE ('A', '') from all_types;
- output: [[0], [0]]
---
- Statement: SELECT POSITION ('bar', 'foobarbar') from all_types WHERE bigint_field = 1;
- output: [[4]]
--- # BUG 943475 : "IN" is not supported
- Statement: SELECT POSITION ('abc' IN 'xzy') from all_types WHERE bigint_field = 1;
- output: [[0]]
---
- Statement: SELECT POSITION ('bar' IN 'foobarbar') from all_types WHERE bigint_field = 1;
- output: [[4]]
---
- Statement: SELECT POSITION ('bar', 'foobarbar') from all_types WHERE bigint_field = 1;
- output: [[4]]
---
- Statement: SELECT POSITION ('xbar', 'foobarbar') from all_types WHERE bigint_field = 1;
- output: [[0]]
---
- Statement: SELECT POSITION (null, 'foobar') from all_types WHERE bigint_field = 1;
- output: [[null]]
---
- Statement: SELECT POSITION(null, null) from all_types WHERE bigint_field = 1;
- output: [[null]]
---
- Statement: SELECT bigint_field from all_types WHERE POSITION('bar', 'foobarbar') = bigint_field * 4;
- output: [[1]]
---
- Statement: SELECT double_field from all_types WHERE POSITION(null, null) IS NULL;
- output: [[5.5], [2.5]]
---
- Statement: SELECT POSITION('', 'foo') from all_types;
- output: [[1], [1]]
---
- Statement: SELECT POSITION ('A', 'a') from all_types;
- output: [[0], [0]]
## Test with params
---
- Statement: SELECT LOCATE (?, 'foobar') from all_types WHERE bigint_field = 1;
- params: [['bar']]
- output: [[4]]
---
- Statement: SELECT LOCATE ('bar', ?) from all_types WHERE bigint_field = 1;
- params: [['abc']]
- output: [[0]]
---
- Statement: SELECT LOCATE ('bar', 'foobarbar', ?) from all_types WHERE bigint_field = 1;
- params: [[5]]
- output: [[7]]
---
- Statement: SELECT varchar_field from all_types WHERE LOCATE(?, varchar_field, 5) = 7;
- params: [['bar']]
- output: [['foobarbar']]
---
- Statement: SELECT POSITION(?, 'foobar') from all_types WHERE bigint_field = 1;
- params: [['bar']]
- output: [[4]]
---
- Statement: SELECT POSITION('foo', ?) from all_types WHERE bigint_field = 1;
- params: [['foobar']]
- output: [[1]]
---
- Statement: SELECT varchar_field from all_types WHERE POSITION(?, varchar_field) = 4;
- params: [['barb']]
- output: [['foobarbar']]
## Test with fields
---
- Statement: SELECT LOCATE('bar', varchar_field, double_field) from all_types WHERE bigint_field = 1;
- output: [[7]]
---
- Statement: SELECT varchar_field from all_types WHERE LOCATE(varchar_field, double_field, bigint_field) = 0;
- output: [['foobarbar'], ['foobar']]
--- # invalid argument type
- Statement: SELECT LOCATE ('foo', varchar_field, date_field) from all_types;
- output: [[0], [0]]
---
- Statement: SELECT LOCATE (null, varchar_field) from all_types;
- output: [[null], [null]]
--- 
- Statement: SELECT POSITION(null, varchar_field) from all_types;
- output: [[null], [null]]
## Test wrong arity:
--- # test empty list
- Statement: SELECT LOCATE() from all_types;
- error: [42000]
--- # test extraneous arg
- Statement: SELECT LOCATE ('foo', 'foobar', 2, null) from all_types;
- error: [42000]
---
- Statement: SELECT LOCATE ('foo', 'foo', 1, 3, 3) from all_types;
- error: [42000]
---
- Statement: SELECT POSITION() from all_types;
- error: [42000]
--- # command 38
- Statement: SELECT POSITION('a', 'b', 1) from all_types;
- error: [42000]
---
- Statement: SELECT POSITION('A', 'abc',1, 3) from all_types;
- error: [42000]
---
- Statement: explain VERBOSE select LOCATE( CAST(? AS CHAR(1)), 'abc%' )
- output: [['Project_Default(LOCATE(CAST($1 AS VARCHAR(1)), ''abc%'', 1))'],
          ['  ValuesScan_Default([])']]
---
- Statement: explain VERBOSE select LOCATE('abcd1234', cast(? as CHAR(3)))
- output: [['Project_Default(LOCATE(''abcd1234'', CAST($1 AS VARCHAR(3)), 1))'],
          ['  ValuesScan_Default([])']]
...
