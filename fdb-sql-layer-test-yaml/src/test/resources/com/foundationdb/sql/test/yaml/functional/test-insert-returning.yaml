# Test inserting into tables
---
- Include: all-types-schema.yaml
---
- Statement: INSERT INTO all_types (bigint_field) VALUES (0), (1), (-1),
    (9223372036854775807), (-9223372036854775808) returning bigint_field
- output: [[0], [1], [-1], [9223372036854775807], [-9223372036854775808]]
- output_types: [BIGINT]
---
- Statement: DELETE from all_types
---
- Statement: INSERT INTO all_types (blob_field) VALUES (create_short_blob(unhex('04'))) returning unwrap_blob(blob_field)
- output: [[!!binary 'BA==']]
---
- Statement: DELETE from all_types
---
- Statement: INSERT INTO all_types (boolean_field) VALUES (true) returning boolean_field
- output: [[true]]
- output_types: [BOOLEAN]
---
- Statement: DELETE from all_types
---
- Statement: INSERT INTO all_types (char_field) VALUES ('d'),('a'),('v') returning char_field
- output: [[d],[a],[v]]
- output_types: [VARCHAR]
---
- Statement: DELETE from all_types
---
- Statement: INSERT INTO all_types (char_multi_field) VALUES ('apple') returning char_multi_field
- output: [[apple]]
- output_types: [VARCHAR]
---
- Statement: DELETE from all_types
---
- Statement: INSERT INTO all_types (date_field) VALUES ('2011-11-08') returning date_field
- output: [['2011-11-08']]
- output_types: [DATE]
---
- Statement: DELETE from all_types
---
- Statement: INSERT INTO all_types (decimal_field) VALUES (1.0), (123456.0),
    (-123456.0), (1234567.0), (-1234567.0)
    returning decimal_field
- output: [[1], [123456], [-123456], [1234567], [-1234567]]
- output_types: [DECIMAL]     
---
- Statement: SELECT (decimal_field) from all_types
- output: [[1], [123456], [-123456], [1234567], [-1234567]]
- output_types: [DECIMAL]
---
- Statement: DELETE from all_types
---
- Statement: INSERT INTO all_types (double_field) VALUES
    ('Infinity'), ('-Infinity'), ('NaN') returning double_field
- output: [[0.0], [0.0], [0.0]]
- output_types: [DOUBLE]
---
- Statement: DELETE from all_types
---
- Statement: INSERT INTO all_types (time_field) VALUES ('03:00:00') returning time_field
- output: [['03:00:00']]
- output_types: [TIME]
---
- Statement: DELETE from all_types
---
- Statement: INSERT INTO all_types (timestamp_field)
    VALUES ('2000-01-02 04:00:00') returning timestamp_field
- output: [[!re '2000-01-02 04:00:00([.]0)?']]
- output_types: [DATETIME]
---
- Statement: DELETE from all_types


# Rest is only valid on single node as each allocates blocks of sequence values
---
- Properties: random-context
- suppressed: true


# Testing sequences for basic functionality
---
- CreateTable: t (c1 integer not null primary key, c2 varchar(20))
---
- Statement: Create Sequence sequence1 start with 1 increment by 1 
---
- Statement: insert into t (c1, c2) values (next value for sequence1, 'FRED') returning c1
- output: [[1]]
---
- Statement: Drop Sequence sequence1 restrict;
---
- DropTable: t
---
- CreateTable: t1 (c1 integer not null primary key  generated by default as identity)
---
- Statement: insert into t1 (c1) values (DEFAULT) returning c1
- output: [[1]]
---
- Statement: insert into t1 (c1) values (11), (DEFAULT), (12), (DEFAULT) returning c1
- output: [[11],[2],[12],[3]]
---
- DropTable: t1
---
- CreateTable: t2 (c1 integer not null primary key generated always as identity)
---
- Statement: insert into t2 (c1) values (null) returning c1
- output: [[1]]
---
- Statement: insert into t2 (c1) values (11), (DEFAULT), (12), (DEFAULT) returning c1
- output: [[2], [3], [4], [5]]
---
- DropTable: t2
---
- CreateTable: t3 (c1 integer not null primary key, c2 varchar(20))
---
- CreateTable: t4 (c1 integer not null primary key, c2 varchar(20))
---
- Statement: Insert into t3 (c1, c2) values (1, 'fred'), (2, 'george'), (3, 'thomas'), (4, 'mike')
---
- Statement: Insert into t4 (c1, c2) select c1, c2 from t3 returning c1
- output: [[1], [2], [3], [4]]
---
- Statement: Delete from t4;
---
- Statement: Insert into t4 (c1, c2) select c1 + 100, c2 from t3 returning c1
- output: [[101], [102], [103], [104]]
---
- CreateTable: t5 (c1 integer not null default 0, c2 varchar(10) not null default 'CHG')
---
- Statement: insert into t5 (c1) values (1), (2), (3) returning c2
- output: [['CHG'], ['CHG'], ['CHG']]
---
- Statement: insert into t5 (c2) values ('ERG'), ('MIN'), ('CAT') returning c1
- output: [[0], [0], [0]]
... 
