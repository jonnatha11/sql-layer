# Test the SIGN function - returns 0 for zero values, 1 for posiive, -1 for negative
---
- Include: all-types-schema.yaml
---
- Statement: SELECT SIGN() FROM all_types
- error: [4250C]
---
- Statement: SELECT SIGN(1.0, -2.0) FROM all_types
- error: [4250C]
---
# Test NULL
- Statement: INSERT INTO all_types (float_field, double_field, smallint_field,
            integer_field, bigint_field, bigint_unsigned_field, decimal_field,
            numeric_field, real_field, varchar_field)
            VALUES (null, null, null, null, null, null, null, null, null, null)
---
- Statement: SELECT SIGN(float_field), SIGN(double_field),
    SIGN(smallint_field), SIGN(integer_field), SIGN(bigint_field),
    SIGN(bigint_unsigned_field), SIGN(decimal_field), SIGN(numeric_field),
    SIGN(real_field), SIGN(varchar_field) FROM all_types
- output: [[null, null, null, null, null, null, null, null, null, null]]
---
- Statement: DELETE FROM all_types
---
# bigint_unsigned_field contains null for a negative value, since it's unsigned
- Statement: INSERT INTO all_types (float_field, double_field, smallint_field,
            integer_field, bigint_field, bigint_unsigned_field, decimal_field,
            numeric_field, real_field, varchar_field)
    VALUES (16.0, 16.0, 16, 16, 16, 16, 16.0, 16.0, 16.0, '16'),
    (-2.0, -2.0, -2, -2, -2, null, -2.0, -2.0, -2.0, '-2.0'),
    (0.0, 0.0, 0, 0, 0, 0, 0.0, 0.0, 0.0, '0.0')
---
- Statement: SELECT SIGN(float_field), SIGN(double_field),
    SIGN(smallint_field), SIGN(integer_field), SIGN(bigint_field),
    SIGN(bigint_unsigned_field), SIGN(decimal_field), SIGN(numeric_field), 
    SIGN(real_field), SIGN(varchar_field) FROM all_types
- output: [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
           [-1, -1, -1, -1, -1, null, -1, -1, -1, -1],
           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

# Infinity and NaN
---
- Statement: DELETE FROM all_types
---
- Statement: INSERT INTO all_types (float_field, double_field, real_field)
    VALUES ('Infinity', 'Infinity', 'Infinity'),
    ('-Infinity', '-Infinity', '-Infinity'),
    ('NaN', 'NaN', 'NaN')
---
- Statement: SELECT SIGN(float_field), SIGN(double_field), SIGN(real_field) FROM all_types
- output: [[0,0,0], [0,0,0], [0,0,0]]

# Literals
---
- Statement: DELETE FROM all_types
---
- Statement: INSERT INTO all_types (double_field) VALUES (1.0)
---
- Statement: SELECT SIGN(0.0) FROM all_types
- output: [[0]]
---
- Statement: SELECT SIGN(2000.234) FROM all_types
- output: [[1]]
---
- Statement: SELECT SIGN(-123.45) FROM all_types
- output: [[-1]]
---
- Statement: SELECT SIGN(2.0 - 500.0) FROM all_types
- output: [[-1]]
# Parameters
---
- Statement: SELECT SIGN(?) FROM all_types
- params: [[100.25]]
- output: [[1]]
---
- Statement: SELECT SIGN(?) FROM all_types
- params: [[-100.25]]
- output: [[-1]]
---
- Statement: SELECT SIGN(?) FROM all_types
- params: [[0.0]]
- output: [[0]]
---

# Test WHERE statements on positive, neg, zero, and null
- Statement: SELECT double_field FROM all_types WHERE SIGN(100) = 1
- output: [[1.0]]
---
- Statement: SELECT double_field from all_types WHERE SIGN(-25) = -1
- output: [[1.0]]
---
- Statement: SELECT double_field from all_types WHERE SIGN(0) = 0
- output: [[1.0]]
---
- Statement: SELECT double_field from all_types WHERE SIGN(null) IS NULL
- output: [[1.0]]
...
